##############
20 椭圆曲线
##############

**************
20.3 主要函数 
************** 
20.3.1  参数设置
================

::


    1) int EC_POINT_set_affine_coordinates_GF2m(
                        const EC_GROUP *group, 
                        EC_POINT *point,
                        const BIGNUM *x, 
                        const BIGNUM *y, 
                        BN_CTX *ctx ) 
       说明:设置二进制域椭圆曲线上点point的几何坐标;

    2) int EC_POINT_set_affine_coordinates_GFp(
                        const EC_GROUP *group, 
                        EC_POINT *point, 
                        const BIGNUM *x, 
                        const BIGNUM *y, 
                        BN_CTX *ctx )
       说明:设置素数域椭圆曲线上点point的几何坐标;

    3) int EC_POINT_set_compressed_coordinates_GF2m( 
                        const EC_GROUP *group, 
                        EC_POINT *point,
                        const BIGNUM *x, 
                        int y_bit,
                        BN_CTX *ctx ) 
       说明:二进制域椭圆曲线，给定压缩坐标x和y_bit参数，设置point的几何坐标;用于将 Octet-String转化为椭圆曲线上的点;

    4) int EC_POINT_set_compressed_coordinates_GFp(
                const EC_GROUP *group, 
                EC_POINT *point, 
                const BIGNUM *x, 
                int y_bit, 
                BN_CTX *ctx) 
       说明:素数域椭圆曲线，给定压缩坐标x和y_bit参数，设置point的几何坐标;用于将 Octet-String转化为椭圆曲线上的点;

    5) int EC_POINT_set_Jprojective_coordinates_GFp(
                    const EC_GROUP *group, 
                    EC_POINT *point,
                    const BIGNUM *x, 
                    const BIGNUM *y, 
                    const BIGNUM *z, 
                    BN_CTX *ctx   ) 
        说明:素数域椭圆曲线group，设置点point的投影坐标系坐标x、y和z;

    6) int EC_POINT_set_to_infinity(const EC_GROUP *group, EC_POINT *point) 
        说明:将点 point 设为无穷远点

    7) int EC_GROUP_set_curve_GF2m(
                                   EC_GROUP *group, 
                                   const BIGNUM *p, 
                                   const BIGNUM *a, 
                                   const BIGNUM *b, 
                                   BN_CTX *ctx  )
        说明:设置二进制域椭圆曲线参数;

    8) int EC_GROUP_set_curve_GFp(  EC_GROUP *group, 
                                    const BIGNUM *p, 
                                    const BIGNUM *a, 
                                    const BIGNUM *b, 
                                    BN_CTX *ctx )
        说明:设置素数域椭圆曲线参数;

    9) int EC_GROUP_set_generator(  EC_GROUP *group, 
                                    const EC_POINT *generator, 
                                    const BIGNUM *order, 
                                    const BIGNUM *cofactor) 
        说明:设置椭圆曲线的基G;generator、order和cofactor为输入参数;

    10) size_t EC_GROUP_set_seed(EC_GROUP *group, const unsigned char *p, size_t len) 
        说明:设置椭圆曲线随机数，用于生成a和b;

    11) EC_GROUP *EC_GROUP_new_curve_GF2m( const BIGNUM *p, 
                                           const BIGNUM *a, 
                                           const BIGNUM *b, 
                                           BN_CTX *ctx) 
        说明:生成二进制域上的椭圆曲线，输入参数为p，a和b;

    12) EC_GROUP *EC_GROUP_new_curve_GFp( const BIGNUM *p, 
                                          const BIGNUM *a, 
                                          const BIGNUM *b, 
                                          BN_CTX *ctx)
        说明:生成素数域上的椭圆曲线。

20.3.2 参数获取
==================

::

    1) const EC_POINT *EC_GROUP_get0_generator(const EC_GROUP *group) 
       说明:获取椭圆曲线的基(G);

    2) unsigned char *EC_GROUP_get0_seed(const EC_GROUP *group) 
       说明:获取椭圆曲线参数的随机数，该随机数可选，用于生成椭圆曲线参数中的a和b;

    3) int EC_GROUP_get_basis_type(const EC_GROUP *group)

    说明:获取二进制域多项式的类型;

    4) int EC_GROUP_get_cofactor(const EC_GROUP *group, 
                                 BIGNUM *cofactor, 
                                 BN_CTX *ctx) 
       说明: 获取椭圆曲线的余因子。cofactor为X9.62中定义的h，
             值为椭圆曲线点的个数/基 点的阶，即:cofactor = #E(Fq)/n。

    5) int EC_GROUP_get_curve_GF2m( const EC_GROUP *group, 
                                    BIGNUM *p, 
                                    BIGNUM *a, 
                                    BIGNUM *b, 
                                    BN_CTX *ctx) 
       说明:获取二元域椭圆曲线的三个参数，其中p可表示多项式;

    6) int EC_GROUP_get_curve_GFp( const EC_GROUP *group, 
                                   BIGNUM *p, 
                                   BIGNUM *a, 
                                   BIGNUM *b, 
                                   BN_CTX *ctx)
       说明:获取素数域椭圆曲线的三个参数;

    7) int EC_GROUP_get_curve_name(const EC_GROUP *group) 
       说明:获取椭圆曲线名称，返回其NID;

    8) int EC_GROUP_get_degree(const EC_GROUP *group) 
       说明:获取椭圆曲线密钥长度。对于素数域Fp来说,是大数p的长度;
            对二进制域F2m 来说，等于m;

    9) int EC_GROUP_get_order( const EC_GROUP *group, 
                               BIGNUM *order, 
                               BN_CTX *ctx)
       说明:获取椭圆曲线的阶;

    10) int EC_GROUP_get_pentanomial_basis( const EC_GROUP *group, 
                                            unsigned int *k1, 
                                            unsigned int *k2, 
                                            unsigned int *k3)
        int EC_GROUP_get_trinomial_basis(const EC_GROUP *group, unsigned int *k)
        说明:获取多项式参数;

    11) int EC_POINT_get_affine_coordinates_GF2m( const EC_GROUP *group, 
                                                  const EC_POINT *point,
                                                  BIGNUM *x, 
                                                  BIGNUM *y, 
                                                  BN_CTX *ctx) 
        说明:获取二进制域椭圆曲线上某个点的x和y的几何坐标;

    12) int EC_POINT_get_affine_coordinates_GFp(const EC_GROUP *group, 
                                                const EC_POINT *point, 
                                                BIGNUM *x, 
                                                BIGNUM *y, 
                                                BN_CTX *ctx) 
        说明:获取素数域上椭圆曲线上某个点的x和y的几何坐标;

    13) int EC_POINT_get_Jprojective_coordinates_GFp(const EC_GROUP *group, 
                                                     const EC_POINT *point,
                                                     BIGNUM *x, 
                                                     BIGNUM *y, 
                                                     BIGNUM *z, 
                                                     BN_CTX *ctx) 
       说明:获取素数域椭圆曲线上某个点的x、y和z的投影坐标系坐标。

20.3.3 转化函数
=================

::

    1) EC_POINT *EC_POINT_bn2point( const EC_GROUP *group, 
                                    const BIGNUM *bn,
                                    EC_POINT *point,
                                    BN_CTX *ctx) 
      说明:将大数转化为椭圆曲线上的点;

    2) EC_POINT *EC_POINT_hex2point( const EC_GROUP *group, 
                                     const char *buf,
                                     EC_POINT *point,
                                     BN_CTX *ctx) 
       说明:将buf中表示的十六进制数据转化为椭圆曲线上的点;

    3) int BN_GF2m_poly2arr(const BIGNUM *a, unsigned int p[], int max)
       说明:将大数转化为多项式的各个项;

    4) int BN_GF2m_arr2poly(const unsigned int p[], BIGNUM *a)
       说明:将多项式的各个项转化为大数;


    5) int EC_POINT_make_affine( const EC_GROUP *group, 
                                 EC_POINT *point, 
                                 BN_CTX *ctx) 
       说明:将椭圆曲线group上点的point转化为几何坐标系;

    6) int EC_POINT_oct2point( const EC_GROUP *group, 
                               EC_POINT *point, 
                               const unsigned char *buf, 
                               size_t len, 
                               BN_CTX *ctx)
       说明:将buf中点数据转化为椭圆曲线上的点，len为数据长度;

    7) BIGNUM *EC_POINT_point2bn( const EC_GROUP *group,
                                  const EC_POINT *point, 
                                  point_conversion_form_t form,
                                  BIGNUM *ret,
                                  BN_CTX *ctx) 
       说明:将椭圆曲线上的点转化为大数，其中from为压缩方式，可以是
        POINT_CONVERSION_COMPRESSED、POINT_CONVERSION_UNCOMPRESSED或
        POINT_CONVERSION_HYBRID，可参考x9.62;

    8) char *EC_POINT_point2hex( const EC_GROUP *group, 
                                 const EC_POINT *point, 
                                 point_conversion_form_t form,
                                 BN_CTX *ctx) 
       说明:将椭圆曲线上的点转化为十六进制，并返回该结果;

    9) size_t EC_POINT_point2oct( const EC_GROUP *group, 
                                  const EC_POINT *point, 
                                  point_conversion_form_t form,
                                  unsigned char *buf, 
                                  size_t len, 
                                  BN_CTX *ctx) 
       说明:将椭圆曲线上的点转化为Octet-String，可分两次调用，
            用法见EC_POINT_point2bn 的实现。


20.3.4 其他函数
===============

::

    1) size_t EC_get_builtin_curves( EC_builtin_curve *r,size_t nitems) 
       说明:获取内置的椭圆曲线。
            当输入参数 r == NULL 或者 nitems == 0时，返回内置椭圆曲线的个数，
            否则将各个椭圆曲线信息存放在 r 中

    2) const EC_METHOD *EC_GF2m_simple_method(void) 
       说明:返回二进制域上的方法集 EC_METHOD

    3) const EC_METHOD *EC_GFp_mont_method(void) 
       const EC_METHOD *EC_GFp_nist_method(void) 
       const EC_METHOD *EC_GFp_simple_method(void) 
       返回素数域上的方法集 EC_METHOD

    4) int EC_GROUP_check(const EC_GROUP *group, BN_CTX *ctx) 
       说明:检查椭圆曲线，成功返回 1。

    5) int EC_GROUP_check_discriminant(const EC_GROUP *group, BN_CTX *ctx) 
    说明: 检查椭圆曲线表达式。
          对于素数域的椭圆曲线来说，该函数会调用 
            ec_GFp_simple_group_check_discriminant 函数，
          主要检查 4*a^3 + 27*b^2 != 0 (mod p)。 
          而对于二进制域的椭圆曲线，会调用 
          ec_GF2m_simple_group_check_discriminant, 
          检查 y^2 + x*y = x^3 + a*x^2 + b 是否是一个椭圆曲线
          并且 b !=0。

    6) int EC_GROUP_cmp(const EC_GROUP *a, const EC_GROUP *b, BN_CTX *ctx) 
       说明:通过比较各个参数来确定两个椭圆曲线是否相等;

    7) int EC_GROUP_copy(EC_GROUP *dest, const EC_GROUP *src) 
       EC_GROUP *EC_GROUP_dup(const EC_GROUP *a) 
       说明:椭圆曲线拷贝函数;

    9) EC_GROUP *EC_GROUP_new_by_curve_name(int nid) 
       说明:根据NID获取内置的椭圆曲线;

    10) int EC_KEY_check_key(const EC_KEY *eckey)
        说明:检查椭圆曲线密钥;

    11) int EC_KEY_generate_key(EC_KEY *eckey)
        说明:生成椭圆曲线公私钥;

    12) int EC_KEY_print(BIO *bp, const EC_KEY *x, int off) 
        说明:将椭圆曲线密钥信息输出到bio中，off为缩进量;

    13) int EC_POINT_add( const EC_GROUP *group, 
                          EC_POINT *r, 
                          const EC_POINT *a, 
                          const EC_POINT *b, 
                          BN_CTX *ctx)
        说明:椭圆曲线上点的加法;

    14) int EC_POINT_invert(const EC_GROUP *group, 
                            EC_POINT *a, 
                            BN_CTX *ctx) 
        说明:求椭圆曲线上某点a的逆元，a既是输入参数，也是输出参数;

    15) int EC_POINT_is_at_infinity(const EC_GROUP *group, 
                                    const EC_POINT *point) 
        说明:判断椭圆曲线上的点point是否是无穷远点;

    16) int EC_POINT_is_on_curve( const EC_GROUP *group, 
                                  const EC_POINT *point, 
                                  BN_CTX *ctx) 
        说明:判断一个点point是否在椭圆曲线上;

    17) int ECDSA_size
        说明:获取 ECC 密钥大小字节数。

    18) ECDSA_sign
        说明:签名，返回 1 表示成功。 

    19) ECDSA_verify
        说明:验签，返回 1 表示合法。

    20) EC_KEY_get0_public_key 
        说明:获取公钥。

    21) EC_KEY_get0_private_key 
        说明:获取私钥。

    22) ECDH_compute_key 
        说明:生成共享密钥

    23) EC_KEY *d2i_ECPrivateKey(EC_KEY **a, const unsigned char **in, long len) 
        说明:DER 解码将椭圆曲线密钥;

    24) int i2d_ECPrivateKey(EC_KEY *a, unsigned char **out) 
        说明:将椭圆曲线密钥 DER 编码;

    更多底层函数的使用示例可参考 ec/ectest.c，特别是用户自行定义椭圆曲线参数。

